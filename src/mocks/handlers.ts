import { rest } from 'msw';
import CatalogueCategoryJSON from './CatalogueCategory.json';

export const handlers = [
  rest.post('/login', (req, res, ctx) => {
    return res(
      ctx.status(200),
      ctx.json(
        // random JWT generated by jwt.io
        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwidXNlcm5hbWUiOiJKb2huIERvZSIsImlhdCI6MTUxNjIzOTAyMn0.p5Csu2THYW5zJys2CWdbGM8GaWjpY6lOQpdLoP4D7V4'
      )
    );
  }),
  rest.post('/v1/catalogue-categories', async (req, res, ctx) => {
    const body = await req.text();
    if (body === '{}') {
      return res(ctx.status(422), ctx.json(''));
    } else if (body === '{"name":"test_dup"}') {
      return res(ctx.status(409), ctx.json(''));
    }
    return res(
      ctx.status(200),
      ctx.json({
        name: 'test',
        parent_id: null,
        id: '1',
        code: 'test',
        path: 'test',
        parent_path: '',
      })
    );
  }),
  rest.get('/catalogueCategory', (req, res, ctx) => {
    const catalogueCategoryParams = req.url.searchParams;
    const path = catalogueCategoryParams.get('path');
    const parentPath = catalogueCategoryParams.get('parent_path');
    let data;
    if (path) {
      data = CatalogueCategoryJSON.filter(
        (catalogueCategory) => catalogueCategory.path === path
      );
    } else if (parentPath) {
      data = CatalogueCategoryJSON.filter(
        (catalogueCategory) => catalogueCategory.parentPath === parentPath
      );
    }
    return res(ctx.status(200), ctx.json(data));
  }),
];
