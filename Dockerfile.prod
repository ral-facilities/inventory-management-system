# Dockerfile to build and serve inventory management system

# Build stage
FROM node:22.14.0-alpine3.20@sha256:9bef0ef1e268f60627da9ba7d7605e8831d5b56ad07487d24d1aa386336d1944 as builder

WORKDIR /inventory-management-system-build

# Enable dependency caching and share the cache between projects
ENV YARN_ENABLE_GLOBAL_CACHE=true
ENV YARN_GLOBAL_FOLDER=/root/.cache/.yarn

COPY package.json tsconfig.json yarn.lock .yarnrc.yml ./
COPY .yarn .yarn
COPY public public

RUN --mount=type=cache,target=/root/.cache/.yarn/cache \
    set -eux; \
    \
    yarn workspaces focus --production;

COPY . .

RUN set -eux; \
    \
    # Set the React production variable which holds reference to the path of the plugin build \
    sed -i "s#VITE_APP_INVENTORY_MANAGEMENT_SYSTEM_BUILD_DIRECTORY=.*#VITE_APP_INVENTORY_MANAGEMENT_SYSTEM_BUILD_DIRECTORY=/inventory-management-system/#" .env.production; \
    \
    cp public/inventory-management-system-settings.example.json public/inventory-management-system-settings.json; \
    \
    yarn build;

# Run stage
FROM httpd:2.4.63-alpine3.21@sha256:4aec2953509e2d3aa5a8d73c580a381be44803fd2481875b15d9ad7d2810d7ca

# Install specific version of jq (Used for assigning config values in entrypoint script)
# Reference: https://pkgs.alpinelinux.org/package/edge/main/x86/jq
RUN apk add --no-cache jq=1.7.1-r0

WORKDIR /usr/local/apache2/htdocs

COPY --from=builder /inventory-management-system-build/dist/. .

RUN set -eux; \
    \
    # Enable mod_deflate \
    sed -i -e 's/^#LoadModule deflate_module/LoadModule deflate_module/' /usr/local/apache2/conf/httpd.conf; \
    # Compress all files except images \
    echo 'SetOutputFilter DEFLATE' >> /usr/local/apache2/conf/httpd.conf; \
    echo 'SetEnvIfNoCase Request_URI "\.(?:gif|jpe?g|png)$" no-gzip' >> /usr/local/apache2/conf/httpd.conf; \
    # Disable caching for .js, .json, and .html files \
    echo '<FilesMatch ".(js|json|html)$">' >> /usr/local/apache2/conf/httpd.conf; \
    echo '    Header set Cache-Control "no-cache"' >> /usr/local/apache2/conf/httpd.conf; \
    echo '</FilesMatch>' >> /usr/local/apache2/conf/httpd.conf; \
    \
    # Privileged ports are permitted to root only by default. \
    # setcap to bind to privileged ports (80) as non-root. \
    apk --no-cache add libcap; \
    setcap 'cap_net_bind_service=+ep' /usr/local/apache2/bin/httpd; \
    \
    # Change ownership of logs directory \
    chown www-data:www-data /usr/local/apache2/logs; \
    \
    # Change ownership of settings file \
    chown www-data:www-data /usr/local/apache2/htdocs/inventory-management-system-settings.json;

# Switch to non-root user defined in httpd image
USER www-data

ENV IMS_API_URL="/inventory-management-system-api"
ENV OS_API_URL="/object-storage-api"
ENV PLUGIN_HOST="/inventory-management-system"
ENV MAX_ATTACHMENT_SIZE_BYTES=104857600
ENV ATTACHMENT_ALLOWED_FILE_EXTENSIONS='[".csv", ".doc", ".docx", ".pdf", ".rtf", ".txt", ".xls", ".xlsx"]'
ENV IMAGE_ALLOWED_FILE_EXTENSIONS='[".bmp", ".jpe", ".jpeg", ".jpg", ".png", ".tif", ".tiff", ".webp"]'
ENV MAX_IMAGE_SIZE_BYTES=52428800

COPY docker/docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]

CMD ["httpd-foreground"]
EXPOSE 80
